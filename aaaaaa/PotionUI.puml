@startuml
class PotionUI <<sealed>> {
    + <<const>> PlusSign : string = "+"
    + <<const>> EqualSign : string = "="
    - _openPlantsPanelBtn : PulledUIItem
    - _openCraftInfoPanelBtn : PulledUIItem
    - _clearBtn : PulledUIItem
    - _scrollPanel : ScrollPanel
    - _craftPanel : GameObject
    - _craftPanelAppearsAnimation : AppearsAnimation
    - _craftPanelDisappearanceAnimation : DisappearanceAnimation
    - _potionPopup : GameObject
    - _potionPopupAppearsAnimation : AppearsAnimation
    - _potionPopupDisappearanceAnimation : DisappearanceAnimation
    - _craftPanelRec : RectTransform
    - _container : Transform
    - _potionRecipePrefab : PotionRecipeUIItem
    - _potionPopupImage : Image
    - _potionPopupName : TMP_Text
    - _potionPopupAcceptBtn : Button
    - _potionPopupReworkBtn : Button
    - _gameConfigProvider : GameConfigProvider
    - _upRenderingMapObjects : SpriteRenderer[]
    - _upRenderingMapObjectsOriginalLayers : int[]
    - _isFreeForShow : bool
    - <<readonly>> _recipesInstances : List<PotionRecipeUIItem>
    - <<readonly>> _subscriptions : CompositeDisposable
    + <<readonly>> AcceptCreatedPotionEvent : ReactiveCommand<bool>
    + Init(upRenderingMapObjects:SpriteRenderer[], mixer:PotionCauldron) : void
    + HardResetPanelToDefault() : void
    + FillPlantData(plantConfigs:PlantConfig[]) : void
    + FillRecipesData(allAvailablePotions:ICollection<PotionConfig>) : void
    - OpenPlantPanel() : void
    - OpenCraftInfoPanel() : void
    - OpenPotionPopup(potionID:string) : void
    - ClosePlantPanel() : void
    - CloseCraftInfoPanel() : void
    - ClosePotionPopup(acceptFlag:bool) : void
    - DisableAll() : void
    - ShowAllBtns() : void
    - UpdateCraftRecipeSize(requestedSize:int) : void
    - HideTopRenderingElements() : void
    - RestoreTopRenderingElements() : void
    - FillRecipesDataAsCells(allAvailablePotions:ICollection<PotionConfig>) : void
}
MonoBehaviour <|-- PotionUI
@enduml
