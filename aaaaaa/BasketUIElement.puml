@startuml
abstract class "ScrollViewItem`1"<TData> {
    + {abstract} Init(data:TData, scrollRect:ScrollRect) : void
    + <<sealed>> <<override>> Init(data1:object, data2:object) : void
}
abstract class ScrollViewItem {
    + {abstract} Init(data1:object, data2:object) : void
}
abstract class "BasketUIElement`2"<TConfig,TParam> {
    # _title : TMP_Text
    # _mainImage : Image
    # _dummyPrefab : ItemDummy<TConfig>
    - _config : TConfig
    - _dummy : ItemDummy<TConfig>
    # <<override>> OnAwake() : void
    + Init(config:TConfig, param:TParam) : void
    # {abstract} OnInit(config:TConfig, param:TParam) : void
    + <<override>> Init(config:object, param:object) : void
    + <<override>> ProcessStartInteractivity(action:InputManager.InputAction) : void
    + <<override>> ProcessInteractivity(action:InputManager.InputAction) : void
    + <<override>> ProcessEndInteractivity(action:InputManager.InputAction) : void
    + <<override>> GetHandleTarget() : Input.InteractiveObjsTypes.InteractiveObject
    + <<override>> GetTargetID() : string
}
ScrollViewItem <|-- "ScrollViewItem`1"
ScrollViewItem <|-- "BasketUIElement`2"
@enduml
